'use strict';

var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const Format = require('d3-format');

class Display extends React__default["default"].PureComponent {
  constructor(props) {
    super(props);
    this.format = Format.format(props.format || '0.2f');
  }

  formatValue(v) {
    const t = typeof v;

    switch (t) {
      case 'object':
        return JSON.stringify(v);

      case 'boolean':
        return '' + v;

      case 'number':
        return this.format(v);

      case 'string':
      default:
        return v;
    }
  }

  render() {
    const {
      value,
      style
    } = this.props;
    const v = value !== undefined ? value : this.props.var;
    return /*#__PURE__*/React__default["default"].createElement("span", {
      style: style,
      className: `idyll-display ${this.props.className ? this.props.className : ''}`.trim()
    }, this.formatValue(v));
  }

}

Display._idyll = {
  name: 'Display',
  tagType: 'closed',
  displayType: 'inline',
  props: [{
    name: 'value',
    type: 'any',
    example: 'x',
    description: 'The value to be displayed.'
  }, {
    name: 'format',
    type: 'string',
    example: '"0.2f"',
    description: 'The format to use, powered by [d3-format](https://github.com/d3/d3-format).'
  }]
};

module.exports = Display;
