'use strict';

var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const {
  filterChildren
} = require('idyll-component-children');

class Annotation extends React__default["default"].PureComponent {
  render() {
    const {
      children
    } = this.props;
    const annotationBox = filterChildren(children || [], c => {
      let name = '';

      if (c && c.props && c.props.idyllASTNode && c.props.idyllASTNode.name) {
        name = c.props.idyllASTNode.name;
      } else if (c && c._idyll && c._idyll.name) {
        name = c._idyll.name;
      } else if (c && c.type && c.type.name) {
        name = c.type.name;
      } else {
        return false;
      }

      return name.toLowerCase() === 'graphic';
    });
    const inlineText = filterChildren(children || [], c => {
      let name = '';

      if (c && c.props && c.props.idyllASTNode && c.props.idyllASTNode.name) {
        name = c.props.idyllASTNode.name;
      } else if (c && c._idyll && c._idyll.name) {
        name = c._idyll.name;
      } else if (c && c.type && c.type.name) {
        name = c.type.name;
      } else {
        return true;
      }

      return name.toLowerCase() !== 'graphic';
    });
    return /*#__PURE__*/React__default["default"].createElement("div", {
      style: {
        display: 'inline'
      }
    }, ' ', /*#__PURE__*/React__default["default"].createElement("div", {
      className: "annotated-text"
    }, inlineText, " ", /*#__PURE__*/React__default["default"].createElement("div", {
      className: "annotation-text"
    }, annotationBox)), ' ');
  }

}

Annotation._idyll = {
  name: 'Annotation',
  tagType: 'open',
  displayType: 'inline'
};

module.exports = Annotation;
